import 'package:fpppb2024/components/my_button.dart';
import 'package:fpppb2024/components/my_textfield.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:expense_repository/src/models/wallet.dart';
import 'package:expense_repository/src/services/firebase_wallet_repo.dart';

class RegisterPage extends StatefulWidget {
  Function()? onTap;
  RegisterPage({
    super.key,
    required this.onTap
  });

  @override
  State<RegisterPage> createState() => _RegisterPageState();
}

class _RegisterPageState extends State<RegisterPage> {
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  final confirmPasswordController = TextEditingController();
  final FireStoreWalletService fireStoreWalletService = FireStoreWalletService();

  Future<void> addWallet({required String userId}) async {
    // Create a new Wallet object with initial balance 0
    final wallet = Wallet(
      userId: userId,
      walletId: '', // This might be generated by Firestore upon document creation
      currentBalance: 0,
      totalIncome: 0,
      created: DateTime.now(),
      lastModified: DateTime.now(),
    );

    await fireStoreWalletService.addWallet(wallet);
  }

  void signUserUp() async{
    // show loading
    showDialog(
        context: context,
        builder: (context){
          return const Center(
            child: CircularProgressIndicator(),
          );
        }
    );

    // check pass and confirm pass same
    if(confirmPasswordController.text != passwordController.text){
      Navigator.pop(context);
      errorMessageBox('Password missmatch');

      return;
    }

    // try signin in
    try{
      await FirebaseAuth.instance.createUserWithEmailAndPassword(
          email: emailController.text,
          password: passwordController.text
      );
      await addWallet(userId: FirebaseAuth.instance.currentUser!.uid);
      Navigator.pop(context);
    }
    on FirebaseAuthException catch (e){
      Navigator.pop(context);
      errorMessageBox(e.code);
    }

  }

  void registerUser() async{

  }

  void errorMessageBox(String msg){
    showDialog(
        context: context,
        builder: (context){
          return AlertDialog(
            title: Text(msg),
          );
        }
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // backgroundColor: Colors.grey[300],
      backgroundColor: Theme.of(context).colorScheme.background,
      body: SafeArea(
          child: Center(
              child: SingleChildScrollView(
                child: Column(
                  children: [
                    // logo
                    Icon(
                      CupertinoIcons.money_dollar_circle,
                      size: 100,
                      color: Theme.of(context).colorScheme.primary,
                    ),

                    const SizedBox(height: 50),

                    // welcome back
                    Text(
                      'Welcome new user, let register yourself!',
                      style: TextStyle(
                        color: Colors.grey[700],
                        fontSize: 16,
                      ),
                    ),

                    const SizedBox(height:25),

                    // username textfield
                    MyTextField(
                      controller: emailController,
                      isObscureText: false,
                      hintText: "Username",
                    ),

                    SizedBox(height:10),

                    // password textfield
                    MyTextField(
                      controller: passwordController,
                      isObscureText: true,
                      hintText: "Password",
                    ),

                    SizedBox(height:10),

                    // password textfield
                    MyTextField(
                      controller: confirmPasswordController,
                      isObscureText: true,
                      hintText: "Confirm Password",
                    ),

                    SizedBox(height:10),

                    // sign in buton
                    MyButton(
                      buttonText: 'Register',
                      onTap: (){
                        signUserUp();
                      },
                    ),

                    const SizedBox(height: 30),

                    // or continue with
                    Row(
                      children: [
                        Expanded(
                          child: Divider(
                            thickness: 0.5,
                            color: Colors.grey[400],
                          ),
                        ),

                        Text(
                          'Or Continue With',
                          style: TextStyle(
                            color: Colors.grey[700],

                          ),
                        ),

                        Expanded(
                          child: Divider(
                            thickness: 0.5,
                            color: Colors.grey[400],
                          ),
                        )

                      ],
                    ),

                    const SizedBox(height:30),

                    // not a member register now
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          'Already have an account? ',
                          style: TextStyle(
                              color: Colors.grey[700]
                          ),
                        ),

                        GestureDetector(
                          onTap: widget.onTap,
                          child: Text(
                            'Login now',
                            style: TextStyle(
                                color: Colors.blue[600]
                            ),
                          ),
                        )
                      ],
                    )


                  ],
                ),
              )
          )
      ),
    );
  }
}
